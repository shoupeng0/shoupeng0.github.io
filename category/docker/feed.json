{
    "version": "https://jsonfeed.org/version/1",
    "title": "以梦为马 • All posts by \"docker\" category",
    "description": "首先森的个人博客",
    "home_page_url": "https://shoupeng0.github.io",
    "items": [
        {
            "id": "https://shoupeng0.github.io/2023/10/08/docker-compose/",
            "url": "https://shoupeng0.github.io/2023/10/08/docker-compose/",
            "title": "Docker Compose 容器编排",
            "date_published": "2023-10-08T11:21:34.000Z",
            "content_html": "<h2 id=\"docker-compose-容器编排\"><a class=\"anchor\" href=\"#docker-compose-容器编排\">#</a> Docker Compose 容器编排</h2>\n<h3 id=\"docker-compose是什么能干嘛\"><a class=\"anchor\" href=\"#docker-compose是什么能干嘛\">#</a> Docker Compose 是什么，能干嘛</h3>\n<p>Docker-Compose 是 Docker 官方的开源项目，负责实现对 Docker 容器集群的快速编排。</p>\n<p>Compose 是 Docker 公司推出的一一个工具软件，可以管理多个 Docker 容器组成一个应用。你需要定义一个 YAML 格式的配置文件 docker-</p>\n<p>compose.yml, <mark>写好多个容器之间的调用关系</mark>。然后，只要一个命令，就能同时启动关闭这些容器</p>\n<p>docker 建议我们每一个容器中只运行一个服务，因为 docker 容器本身占用资源极少，所以最好是将每个服务单独的分割开来但是这样我们又</p>\n<p>面临了一个问题？</p>\n<p>如果我需要同时部署好多个服务，难道要每个服务单独写 Dockerfile 然后在构建镜像，构建容器，这样累都累死了，所以 docker 官方给我们提供了 docker-compose 多服务部署的工具</p>\n<p>例如要实现一个 Web 微服务项目，除了 Web 服务容器本身，往往还需要再加上后端的数据库 mysq | 服务容器，redis 服务器，注册中心</p>\n<p>eureka，甚至还包括负载均衡容器等等。。。。。。</p>\n<p>Compose 允许用户通过一个单独的 docker-compose.yml 模板文件 (YAML 格式) 来定义一组相关联的应用容器为一个项目 (project) 。</p>\n<p>可以很容易地用一个配置文件定义一个多容器的应用，然后使用 -. 条指令安装这个应用的所有依赖，完成构建。Docker-Compose 解决了容器与容器之间如何管理编排的问题。</p>\n<h3 id=\"docker-compose下载\"><a class=\"anchor\" href=\"#docker-compose下载\">#</a> Docker Compose 下载</h3>\n<p>官网地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLmRvY2tlci5jb20vY29tcG9zZS9pbnN0YWxsL2xpbnV4LyNpbnN0YWxsLXRoZS1wbHVnaW4tbWFudWFsbHk=\">Install the Compose plugin | Docker Docs</span></p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token assign-left variable\">DOCKER_CONFIG</span><span class=\"token operator\">=</span><span class=\"token variable\">$&#123;DOCKER_CONFIG<span class=\"token operator\">:-</span>$HOME<span class=\"token operator\">/</span>.docker&#125;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">mkdir</span> <span class=\"token parameter variable\">-p</span> <span class=\"token variable\">$DOCKER_CONFIG</span>/cli-plugins</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">curl</span> <span class=\"token parameter variable\">-SL</span> https://github.com/docker/compose/releases/download/v2.20.3/docker-compose-linux-x86_64 <span class=\"token parameter variable\">-o</span> <span class=\"token variable\">$DOCKER_CONFIG</span>/cli-plugins/docker-compose</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">chmod</span> +x <span class=\"token variable\">$DOCKER_CONFIG</span>/cli-plugins/docker-compose</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token function\">docker</span> compose version</pre></td></tr></table></figure><p><img data-src=\"http://s19vhrdn9.hd-bkt.clouddn.com/image-20230927162628068.png\" alt=\"image-20230927162628068\" /></p>\n<h3 id=\"核心概念\"><a class=\"anchor\" href=\"#核心概念\">#</a> 核心概念</h3>\n<p>一文件 docker-compose. yml<br />\n 两要素</p>\n<p>服务 (service) 一个个应用容器实例，比如订单微服务、库存微服务、mysq | 容 器、nginx 容 器</p>\n<p>工程 (project) 由一组关联的应用容器组成的一个完整业务单元， 在 docker-compose.yml 文件中定义。</p>\n<p><img data-src=\"http://s19vhrdn9.hd-bkt.clouddn.com/image-20230927163054932.png\" alt=\"image-20230927163054932\" /></p>\n<h3 id=\"compose-使用的三个步骤\"><a class=\"anchor\" href=\"#compose-使用的三个步骤\">#</a> compose 使用的三个步骤</h3>\n<p>1. 编写 Dockerfile 定义各个微服务应用并构建出对应的镜像文件</p>\n<p>2. 使用 docker-compose.yml 定义一个完整业务单元，安排好整体应用中的各个容器服务<br />\n 3. 最后，执行 docker-compose up 命令来启动并运行整个应用程序，完成一键部署上线</p>\n<h3 id=\"compose常用命令\"><a class=\"anchor\" href=\"#compose常用命令\">#</a> compose 常用命令</h3>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker-compose</span> <span class=\"token parameter variable\">-h</span> <span class=\"token comment\">#查看帮助</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">docker-compose</span> u <span class=\"token comment\">#启动所有 docker-compose 服务</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">docker-compose</span> up <span class=\"token parameter variable\">-d</span> <span class=\"token comment\">#启动所有 docker-compose 服务并后台运行</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">docker-compose</span> down <span class=\"token comment\">#停止并删除容器、网络、卷、镜像。</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">docker-compose</span> <span class=\"token builtin class-name\">exec</span> yml里面的服务id <span class=\"token comment\">#进入容器实例内部 docker-compose exec docker-compose.yml 文件中写的服务 id /bin/bash </span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">docker-compose</span> <span class=\"token function\">ps</span> <span class=\"token comment\">#展示当前 docker-compose 编排过的运行的所有容器</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token function\">docker-compose</span> <span class=\"token function\">top</span> <span class=\"token comment\">#展示当前 docker-compose 编排过的容器进程</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token function\">docker-compose</span> logs yml 里面的服务id <span class=\"token comment\">#查看容器输出日志</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>dokcer-compose config <span class=\"token comment\">#检查配置</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>dokcer-compose config-q <span class=\"token comment\">#检查配置，有问题才有输出</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token function\">docker-compose</span> restart <span class=\"token comment\">#重启服务</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token function\">docker-compose</span> start <span class=\"token comment\">#启动服务</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token function\">docker-compose</span> stop <span class=\"token comment\">#停止服务</span></pre></td></tr></table></figure><h3 id=\"使用compose编排服务\"><a class=\"anchor\" href=\"#使用compose编排服务\">#</a> 使用 compose 编排服务</h3>\n<blockquote>\n<p>没有使用 compose 之前：</p>\n</blockquote>\n<p>先后顺序要求固定，先 mysql+redis 才能微服务访问成功</p>\n<p>多个 run 命令<br />\n......<br />\n 容器间的启停或宕机，有可能导致 IP 地址对应的容器实例变化，映射出错，要么生产 IP 写死 (可以但是不推荐)，要么通过服务调用</p>\n<blockquote>\n<p>docker-compose.yml</p>\n</blockquote>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">services</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">microService</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>       <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> redis<span class=\"token punctuation\">:</span><span class=\"token number\">1.6</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>       <span class=\"token key atrule\">container_name</span><span class=\"token punctuation\">:</span> ms01</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>       <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>          <span class=\"token punctuation\">-</span> <span class=\"token string\">\"6001:6001\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>       <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>          <span class=\"token punctuation\">-</span> /app/microService<span class=\"token punctuation\">:</span>/data</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>       <span class=\"token key atrule\">networks</span><span class=\"token punctuation\">:</span> </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>          <span class=\"token punctuation\">-</span> atguigu_net</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>       <span class=\"token key atrule\">depends_on</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>          <span class=\"token punctuation\">-</span> redis</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>          <span class=\"token punctuation\">-</span> mysql</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token key atrule\">redis</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>       <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"redis:6.0.10\"</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>       <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token punctuation\">-</span> <span class=\"token string\">\"6379:6379\"</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>       <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token punctuation\">-</span> /app/redis/redis.conf<span class=\"token punctuation\">:</span>/etc/redis/redis.conf</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token punctuation\">-</span> /app/redis/data<span class=\"token punctuation\">:</span>/data</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>       <span class=\"token key atrule\">networks</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token punctuation\">-</span> atguigu_net</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>       <span class=\"token key atrule\">command</span><span class=\"token punctuation\">:</span> redis<span class=\"token punctuation\">-</span>server /etc/redis/redis.conf</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  <span class=\"token key atrule\">mysql</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> mysql<span class=\"token punctuation\">:</span><span class=\"token number\">5.7</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token key atrule\">environment</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            <span class=\"token key atrule\">MYSQL_ROOT_PASSWORD</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'123456'</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            <span class=\"token key atrule\">MYSQL_ALLOW_EMPTY_PASSWORD</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'no'</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            <span class=\"token key atrule\">MYSQL_DATABASE</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'test'</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            <span class=\"token key atrule\">MYSQL_USER</span><span class=\"token punctuation\">:</span> root</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            <span class=\"token key atrule\">MYSQL_PASSWORD</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'123456'</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            <span class=\"token punctuation\">-</span> <span class=\"token string\">\"3306:3306\"</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>            <span class=\"token punctuation\">-</span> /app/mysql/db<span class=\"token punctuation\">:</span>/var/lib/mysql</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>            <span class=\"token punctuation\">-</span> /app/mysq1/conf/my.cnf<span class=\"token punctuation\">:</span>/etc/my.cnf</pre></td></tr><tr><td data-num=\"37\"></td><td><pre>            <span class=\"token punctuation\">-</span> /app/mysql/init<span class=\"token punctuation\">:</span>/docker<span class=\"token punctuation\">-</span>entrypoint<span class=\"token punctuation\">-</span>initdb.d</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token key atrule\">networks</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>            <span class=\"token punctuation\">-</span> atguigu_net</pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token key atrule\">command</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>default<span class=\"token punctuation\">-</span>authentication<span class=\"token punctuation\">-</span>plugin=<span class=\"token punctuation\">-</span>mysql_native_password <span class=\"token comment\">#解决外部无法访问</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token comment\">#创建自定义网络</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token key atrule\">networks</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>  <span class=\"token key atrule\">atguigu_net</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token comment\"># Use a custom driver</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token key atrule\">driver</span><span class=\"token punctuation\">:</span> redis</pre></td></tr></table></figure><blockquote>\n<p>启动</p>\n</blockquote>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> compose up <span class=\"token comment\">#前台启动</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">docker</span> compose up <span class=\"token parameter variable\">-d</span> <span class=\"token comment\">#后台启动</span></pre></td></tr></table></figure>",
            "tags": [
                "Docker",
                "Compose"
            ]
        }
    ]
}